{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","listaAtual","obterNegociacoes","filter","some","negociacao","isEquals","negociacaoExistente","err","getConnection","connection","dao","adiciona","listaTodos","apagaTodos"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\nimport { NegociacaoDao } from \"./../dao/NegociacaoDao\";\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });\r\n    }\r\n\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente))))\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível importar as negociações');\r\n            });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso')\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível adicionar a negociação');\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n            })\r\n    }\r\n}"]}